<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>ActionDB</name>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>none</string>
              <string>apply -auto-approve</string>
              <string>destroy -auto-approve</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>ActionInfra</name>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>apply -auto-approve</string>
              <string>destroy -auto-approve</string>
              <string>none</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Provision_app</name>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>true</string>
              <string>false</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.14.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@github.com:VlN9/Wagtail-AWS-terraform.git</url>
        <credentialsId>ssh-git-key-id</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="empty-list"/>
    <extensions/>
  </scm>
  <assignedNode>wagtail-node</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>if [ &quot;$ActionInfra&quot; != &quot;none&quot; ]; then
  if [ &quot;$ActionDB&quot; == &quot;apply -auto-approve&quot; ];then
      terraform -chdir=wagtail_db init &amp;&amp; terraform -chdir=wagtail_db $ActionDB
      terraform -chdir=ec2_server init &amp;&amp; terraform -chdir=ec2_server $ActionInfra -var-file=&quot;~/prod.tfvars&quot;
  elif [ &quot;$ActionDB&quot; == &quot;destroy -auto-approve&quot; ]; then
      terraform -chdir=ec2_server init &amp;&amp; terraform -chdir=ec2_server $ActionInfra -var-file=&quot;~/prod.tfvars&quot;
      terraform -chdir=wagtail_db init &amp;&amp; terraform -chdir=wagtail_db $ActionDB
  else
  	  terraform -chdir=ec2_server init &amp;&amp; terraform -chdir=ec2_server $ActionInfra -var-file=&quot;~/prod.tfvars&quot;
  fi
fi
if [ &quot;$ActionInfra&quot; == &quot;none&quot; ] &amp;&amp; [ &quot;$ActionDB&quot; != &quot;none&quot; ]; then
	terraform -chdir=wagtail_db init &amp;&amp; terraform -chdir=wagtail_db $ActionDB
fi
</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>if [ &quot;$Provision_app&quot; == &quot;true&quot; ]; then
	cd ec2_server &amp;&amp; ansible-playbook ansible/playbook-prov-app.yaml
fi</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>